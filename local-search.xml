<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>cs</title>
    <link href="/2023/05/23/cs/"/>
    <url>/2023/05/23/cs/</url>
    
    <content type="html"><![CDATA[<h2 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h2><h4 id="右移、左移-操作符"><a href="#右移、左移-操作符" class="headerlink" title="右移、左移 操作符"></a>右移、左移 操作符</h4><p>​右移操作符，移动的是二进制位，由于一个int类型的数占四个字节，所以举例”16”的二进制位应为”00000000000000000000000000010000”</p><p>​算术右移：右边丢弃，左边补原符号位(原码的第一位为符号位，正数的符号位是”0”，负数的符号位是”1”)，所以如下”b”应该是”00000000000000000000000000001000”，结果为”8”</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf">int a <span class="hljs-operator">=</span> <span class="hljs-number">16</span><span class="hljs-comment">;</span><br>int b <span class="hljs-operator">=</span> a &gt;&gt; <span class="hljs-number">1</span><span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>​逻辑右移：右边丢弃，左边补0；与算术右移的区别是无论正反，左边都补0</p><p>​左移操作符：</p><p>​右边丢弃，左边补0</p><p>​与右移操作符逻辑右移相反</p><h5 id="整数的二进制表示有原码，反码，补码，存储到内存中的是补码，如下，”-1”的原、反、补码"><a href="#整数的二进制表示有原码，反码，补码，存储到内存中的是补码，如下，”-1”的原、反、补码" class="headerlink" title="整数的二进制表示有原码，反码，补码，存储到内存中的是补码，如下，”-1”的原、反、补码"></a>整数的二进制表示有原码，反码，补码，存储到内存中的是补码，如下，”-1”的原、反、补码</h5><p>​“10000000000000000000000000000001”原码，开头符号位为”1”代表这个数为正数</p><p>​“11111111111111111111111111111110”符号位不变，其它位按位取反得到反码</p><p>​“11111111111111111111111111111111”反码加一得到补码</p><p><strong>注意:对于移位运算符，不要移动负数位，这是一种未定义行为</strong></p><h4 id="位操作符"><a href="#位操作符" class="headerlink" title="位操作符"></a>位操作符</h4><p>​（1）.&amp;，按位与，规则：若两个相应额二进制位都为1，则该位的结果为1，否则为0.</p><p>​（2）.|，按位或，规则：两个相应的二进制位中只要有一个为1，则该位的结果为1，否则为0.</p><p>​（3）.^,按位异或，规则：若两个二进制位相同，则结果为0，不同则为1</p><p>​（4）.~，按位求反，规则：按位取反，即0变1，1变0</p><p>​（5）.&lt;&lt;，左移，将一个数的二进制位全部左移若干位，左移1位相当于乘2，左移n位，相当于乘2的n次方</p><p>​（6）.&gt;&gt;，右移，将一个数的二进制位全部右移若干位。不同系统下右移的结果不同，而在mac系统下：正数右移1位，相当于除以2，右移n位，相当于除以2的n次方（移动时，空缺的高位补零，移出的位数舍弃）；负数<br><strong>注意：它们的操作数都必须是正数</strong></p><p><img src="/home/ricardu/.config/Typora/typora-user-images/image-20230520154718890.png" alt="image-20230520154718890"></p><p><img src="/home/ricardu/.config/Typora/typora-user-images/image-20230520154603186.png" alt="image-20230520154603186"></p><h4 id="一道变态的面试题："><a href="#一道变态的面试题：" class="headerlink" title="一道变态的面试题："></a>一道变态的面试题：</h4><p>​不能创建临时变量（第三个变量），实现两个数的交换。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">mai</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> a = <span class="hljs-number">10</span>;<br><span class="hljs-type">int</span> b = <span class="hljs-number">20</span>;<br>a = a^b;<br>b = a^b;<br>a = a^b;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;a = %d b = %d\n&quot;</span>, a, b);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="复合赋值符"><a href="#复合赋值符" class="headerlink" title="复合赋值符"></a>复合赋值符</h4><p>​+&#x3D;-&#x3D;*&#x3D;&#x2F;&#x3D;%&#x3D;&gt;&gt;&#x3D;&lt;&lt;&#x3D;&amp;&#x3D;|&#x3D;^&#x3D;</p><p>​用法举例</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs llvm">int <span class="hljs-keyword">x</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-comment">;</span><br><span class="hljs-keyword">x</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">x</span><span class="hljs-number">+10</span><span class="hljs-comment">;</span><br><span class="hljs-keyword">x</span> +<span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><h4 id="前置-x2F-后置"><a href="#前置-x2F-后置" class="headerlink" title="前置&#x2F;后置"></a>前置&#x2F;后置</h4><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">int</span> main()<br>&#123;<br><span class="hljs-keyword">int</span> a=<span class="hljs-number">10</span>;<br><span class="hljs-regexp">//prin</span>tf(<span class="hljs-string">&quot;%d\n&quot;</span>,++a);<span class="hljs-regexp">//</span>前置++，先++，后使用，输出为<span class="hljs-number">11</span><br>//<span class="hljs-keyword">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,a++);<span class="hljs-regexp">//</span>后置++，先使用，再++<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>​减减同理</p><h4 id="关系操作符"><a href="#关系操作符" class="headerlink" title="关系操作符"></a>关系操作符</h4><p>​&gt;</p><p>​&gt;&#x3D;</p><p>​&lt;</p><p>​&lt;&#x3D;</p><p>​!&#x3D;</p><p>​&#x3D;&#x3D;</p><p>​<strong>注意：”&#x3D;”是赋值，”&#x3D;&#x3D;”才是判断相等，不要漏写</strong></p><h4 id="逻辑操作符"><a href="#逻辑操作符" class="headerlink" title="逻辑操作符"></a>逻辑操作符</h4><p>​&amp;&amp;逻辑与：只有当条件A和条件B都成立时，结果才为1，也就是“真”；其余情况的结果都为0，也就是“假”。因此，条件A或条件B只要有一个不成立，结果都为0，也就是“假”</p><p>​| |逻辑或：当条件A或条件B只要有一个成立时（也包括条件A和条件B都成立），结果就为1，也就是“真”；只有当条件A和条件B都不成立时，结果才为0，也就是“假”。</p><h4 id="条件操作符"><a href="#条件操作符" class="headerlink" title="条件操作符"></a>条件操作符</h4><p>​exp1 ? exp2 : exp3</p><p>​若表达式1结果为真，那么就算表达式2,表达式2的结果为整个表达式的结果</p><p>​若表达式1结果为假，那么就算表达式3,表达式3的结果为整个表达式的结果</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-built_in">int</span> <span class="hljs-title">main</span>()</span><br>&#123;<br><span class="hljs-built_in">int</span> a = <span class="hljs-number">0</span>;<br><span class="hljs-built_in">int</span> b = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">if</span> ( a &gt; <span class="hljs-number">5</span>)<br>b = <span class="hljs-number">3</span>;<br><span class="hljs-keyword">else</span><br>b = <span class="hljs-number">-3</span>;<br><span class="hljs-comment">//以上判断语句可以写成</span><br>b = (a &gt; <span class="hljs-number">5</span> ? <span class="hljs-number">3</span> : <span class="hljs-number">-3</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/05/23/hello-world/"/>
    <url>/2023/05/23/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
